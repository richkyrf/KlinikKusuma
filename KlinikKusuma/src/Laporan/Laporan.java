/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Laporan;

import File.SimpleReport;
import FunctionGUI.JOptionPaneF;
import java.util.Date;
import static GlobalVar.Var.*;
import KomponenGUI.FDateF;
import LSubProces.RunSelct;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.TableModel;
import net.sf.dynamicreports.jasper.builder.JasperReportBuilder;
import net.sf.dynamicreports.report.builder.DynamicReports;
import static net.sf.dynamicreports.report.builder.DynamicReports.cmp;
import static net.sf.dynamicreports.report.builder.DynamicReports.col;
import static net.sf.dynamicreports.report.builder.DynamicReports.margin;
import static net.sf.dynamicreports.report.builder.DynamicReports.stl;
import static net.sf.dynamicreports.report.builder.DynamicReports.type;
import net.sf.dynamicreports.report.builder.style.StyleBuilder;
import net.sf.dynamicreports.report.constant.HorizontalTextAlignment;
import net.sf.dynamicreports.report.constant.PageOrientation;
import net.sf.dynamicreports.report.constant.PageType;
import net.sf.dynamicreports.report.constant.VerticalTextAlignment;
import net.sf.dynamicreports.report.constant.WhenNoDataType;
import net.sf.dynamicreports.report.datasource.DRDataSource;
import net.sf.jasperreports.engine.JRDataSource;

/**
 *
 * @author richk
 */
public class Laporan extends javax.swing.JFrame {

    String[] Judul;

    /**
     * Creates new form LaporanLab
     */
    public Laporan(String type) {
        setTitle(type);
        initComponents();
        setVisible(true);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setResizable(false);
        tampilkan();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlableF1 = new KomponenGUI.JlableF();
        JDTanggal = new KomponenGUI.JdateCF();
        jlableF2 = new KomponenGUI.JlableF();
        JDTanggal1 = new KomponenGUI.JdateCF();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtableF1 = new KomponenGUI.JtableF();
        jbuttonF1 = new KomponenGUI.JbuttonF();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jlableF1.setText("Periode :");

        JDTanggal.setDateFormatString("dd-MM-yyyy");
        Calendar c = Calendar.getInstance();
        c.set(Calendar.DAY_OF_MONTH, c.getActualMinimum(Calendar.DAY_OF_MONTH));
        Date now = c.getTime();
        JDTanggal.setDate(now);
        JDTanggal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                JDTanggalPropertyChange(evt);
            }
        });

        jlableF2.setText("s/d");

        JDTanggal1.setDateFormatString("dd-MM-yyyy");
        c.set(Calendar.DAY_OF_MONTH, c.getActualMaximum(Calendar.DAY_OF_MONTH));
        now = c.getTime();
        JDTanggal1.setDate(now);
        JDTanggal1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                JDTanggal1PropertyChange(evt);
            }
        });

        new JScrollPane(jtableF1, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        jtableF1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jtableF1.setAutoCreateRowSorter(true);
        jtableF1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtableF1);

        jbuttonF1.setText("Print");
        jbuttonF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttonF1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlableF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JDTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlableF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JDTanggal1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbuttonF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JDTanggal1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlableF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JDTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlableF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jbuttonF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if (getTitle().equals("Laporan Tindakan")) {
            laporanTindakan = null;
        } else if (getTitle().equals("Laporan Facial")) {
            laporanFacial = null;
        } else if (getTitle().equals("Laporan Harian")) {
            laporanHarian = null;
        } else {
            JOptionPaneF.showMessageDialog(this, "Parameter Salah.");
        }
    }//GEN-LAST:event_formWindowClosed

    private void jbuttonF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttonF1ActionPerformed
        if (getTitle().equals("Laporan Tindakan")) {
            build(jtableF1.getModel(), "Laporan Tindakan", Judul);
        } else if (getTitle().equals("Laporan Facial")) {
            build(jtableF1.getModel(), "Laporan Facial", Judul);
        } else if (getTitle().equals("Laporan Harian")) {
            build(jtableF1.getModel(), "Laporan Harian", Judul);
        } else {
            JOptionPaneF.showMessageDialog(this, "Parameter Salah.");
        }
    }//GEN-LAST:event_jbuttonF1ActionPerformed

    private void JDTanggalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_JDTanggalPropertyChange
        tampilkan();
    }//GEN-LAST:event_JDTanggalPropertyChange

    private void JDTanggal1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_JDTanggal1PropertyChange
        tampilkan();
    }//GEN-LAST:event_JDTanggal1PropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Laporan("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static KomponenGUI.JdateCF JDTanggal;
    private static KomponenGUI.JdateCF JDTanggal1;
    private javax.swing.JScrollPane jScrollPane1;
    private KomponenGUI.JbuttonF jbuttonF1;
    private KomponenGUI.JlableF jlableF1;
    private KomponenGUI.JlableF jlableF2;
    public KomponenGUI.JtableF jtableF1;
    // End of variables declaration//GEN-END:variables

    void tampilkan() {
        RunSelct runSelct = new RunSelct();
        if (getTitle().equals("Laporan Tindakan")) {
            runSelct.setQuery("SELECT `IdTindakan`, `NamaTindakan` FROM `tbmtindakan` WHERE `IdTipeTindakan` = 1 ");
        } else if (getTitle().equals("Laporan Facial")) {
            runSelct.setQuery("SELECT `IdTindakan`, `NamaTindakan` FROM `tbmtindakan` WHERE `IdTipeTindakan` = 2 ");
        } else if (getTitle().equals("Laporan Harian")) {
            runSelct.setQuery("SELECT `IdBarang`, `NamaBarang` FROM `tbmbarang` WHERE 1 ");
        }
        String sql;
        String dynamic = "";
        try {
            ResultSet rs = runSelct.excute();
            rs.last();
            if (getTitle().equals("Laporan Harian")) {
                Judul = new String[rs.getRow() + 6];
            } else {
                Judul = new String[rs.getRow() + 4];
            }
            rs.beforeFirst();
            int row = 2;
            Judul[0] = "Tanggal";
            Judul[1] = "Pasien";
            while (rs.next()) {
                Judul[row] = rs.getString(2);
                if (getTitle().equals("Laporan Harian")) {
                    dynamic += ", SUM(IF(a.`IdBarang` = '" + rs.getString(1) + "', `Jumlah`, 0)) as '" + rs.getString(2) + "'";
                } else {
                    dynamic += ", SUM(IF(a.`IdTindakan` = '" + rs.getString(1) + "', `Jumlah`, 0)) as '" + rs.getString(2) + "'";
                }
                row++;
            }
            if (getTitle().equals("Laporan Harian")) {
                Judul[row] = "Total Pembelanjaan";
                Judul[row + 1] = "Diskon";
                Judul[row + 2] = "Pembayaran";
                Judul[row + 3] = "Kasir";
            } else {
                Judul[row] = "Harga";
                if (getTitle().equals("Laporan Tindakan")) {
                    Judul[row + 1] = "Dokter";
                } else if (getTitle().equals("Laporan Facial")) {
                    Judul[row + 1] = "Beautician";
                }
            }
        } catch (SQLException e) {
            System.out.println("E6" + e);
            JOptionPaneF.showMessageDialog(null, "Gagal Panggil Tampilkan Data");
        } finally {
//            runSelct.closecon();
        }
        sql = null;
        if (getTitle().equals("Laporan Tindakan")) {
            sql = "SELECT DATE_FORMAT(b.`Tanggal`,'%d-%m-%Y') as 'Tanggal', `NamaPasien` as 'Pasien' " + dynamic + ", a.`Harga`, `NamaDokter` as 'Dokter'  FROM `tbbillingtindakan`a JOIN `tbbilling`b ON a.`NoBilling`=b.`NoBilling` JOIN `tbperawatan`c ON b.`NoInvoice`=c.`NoInvoice` JOIN `tbantrian`d ON c.`NoAntrian`=d.`NoAntrian` AND c.`Tanggal`=d.`Tanggal` JOIN `tbmpasien`e ON d.`IdPasien`=e.`IdPasien` JOIN `tbmdokter`f ON c.`IdDokter`=f.`IdDokter` JOIN `tbmtindakan`g ON a.`IdTindakan`=g.`IdTindakan` WHERE `IdTipeTindakan` = 1 AND b.`Tanggal` BETWEEN '" + FDateF.datetostr(JDTanggal.getDate(), "yyyy-MM-dd") + "' AND '" + FDateF.datetostr(JDTanggal1.getDate(), "yyyy-MM-dd") + "' GROUP BY a.`NoBilling` ORDER BY a.`NoBilling` ASC ";
        } else if (getTitle().equals("Laporan Facial")) {
            sql = "SELECT DATE_FORMAT(b.`Tanggal`,'%d-%m-%Y') as 'Tanggal', `NamaPasien` as 'Pasien' " + dynamic + ", a.`Harga`, IFNULL(`NamaBeautician`,'-') as 'Beautician'  FROM `tbbillingtindakan`a JOIN `tbbilling`b ON a.`NoBilling`=b.`NoBilling` JOIN `tbperawatan`c ON b.`NoInvoice`=c.`NoInvoice` JOIN `tbantrian`d ON c.`NoAntrian`=d.`NoAntrian` AND c.`Tanggal`=d.`Tanggal` JOIN `tbmpasien`e ON d.`IdPasien`=e.`IdPasien` LEFT JOIN `tbmbeautician`f ON c.`IdBeautician`=f.`IdBeautician` JOIN `tbmtindakan`g ON a.`IdTindakan`=g.`IdTindakan` WHERE `IdTipeTindakan` = 2 AND b.`Tanggal` BETWEEN '" + FDateF.datetostr(JDTanggal.getDate(), "yyyy-MM-dd") + "' AND '" + FDateF.datetostr(JDTanggal1.getDate(), "yyyy-MM-dd") + "' GROUP BY a.`NoBilling` ORDER BY a.`NoBilling` ASC ";
        } else if (getTitle().equals("Laporan Harian")) {
            sql = "SELECT DATE_FORMAT(`Tanggal`,'%d-%m-%Y') as 'Tanggal', `NamaPasien` as 'Pasien' " + dynamic + ", SUM(`Jumlah`*`Harga`) as 'Total Pembelanjaan', `Diskon` as 'Diskon', `Bayar` as 'Pembayaran',`Kasir` as 'Kasir' FROM `tbpenjualandetail`a JOIN `tbpenjualan`b ON a.`NoTransaksi`=b.`Notransaksi` LEFT JOIN `tbmpasien`c ON b.`IdPasien`=c.`IdPasien` WHERE 1 AND `Tanggal` BETWEEN '" + FDateF.datetostr(JDTanggal.getDate(), "yyyy-MM-dd") + "' AND '" + FDateF.datetostr(JDTanggal1.getDate(), "yyyy-MM-dd") + "' GROUP BY a.`NoTransaksi` ORDER BY a.`NoTransaksi` ASC ";
        }
        jtableF1.setQuery(sql);
        jtableF1.tampilkan();
        for (int i = 0; i < jtableF1.getColumnCount(); i++) {
            if (getTitle().equals("Laporan Harian")) {
                if (i == jtableF1.getColumnCount() - 2 || i == jtableF1.getColumnCount() - 3 || i == jtableF1.getColumnCount() - 4) {
                    jtableF1.setrender(new int[]{i}, new String[]{"Number"});
                } else if (i != jtableF1.getColumnCount() - 1 && i > 1) {
                    jtableF1.setrender(new int[]{i}, new String[]{"CenteredNumber"});
                }
            } else {
                if (i == jtableF1.getColumnCount() - 2) {
                    jtableF1.setrender(new int[]{i}, new String[]{"Number"});
                } else if (i != jtableF1.getColumnCount() - 1 && i > 1) {
                    jtableF1.setrender(new int[]{i}, new String[]{"CenteredNumber"});
                }
            }
        }
    }

    void build(TableModel model, String judul, String[] JudulKolom) {
        StyleBuilder titleStyle = stl.style().bold().setHorizontalTextAlignment(HorizontalTextAlignment.CENTER).setFontSize(14).setFontName("Verdana").setPadding(5).setBorder(stl.pen1Point().setLineWidth(1f));
        StyleBuilder columnTitleStyle = stl.style().bold().setTextAlignment(HorizontalTextAlignment.CENTER, VerticalTextAlignment.MIDDLE).setPadding(2).setBorder(stl.pen1Point().setLineWidth(0.5f));
        StyleBuilder colStyle = stl.style().setPadding(2).setBorder(stl.pen1Point().setLineWidth(0.5f));
        try {
            JasperReportBuilder report = DynamicReports.report();
            report.setColumnTitleStyle(columnTitleStyle);
            for (int i = 0; i < JudulKolom.length; i++) {
                if (i == 0) {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.stringType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.CENTER).setWidth(120));
                } else if (i == 1) {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.stringType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.LEFT).setWidth(200));
                } else if (i == JudulKolom.length - 4 && getTitle().equals("Laporan Harian")) {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.integerType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.RIGHT).setWidth(100));
                } else if (i == JudulKolom.length - 3 && getTitle().equals("Laporan Harian")) {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.integerType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.RIGHT).setWidth(100));
                } else if (i == JudulKolom.length - 2) {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.integerType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.RIGHT).setWidth(100));
                } else if (i == JudulKolom.length - 1) {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.stringType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.CENTER).setWidth(200));
                } else {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.integerType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.CENTER).setWidth(60));
                }
            }
            report.setPageFormat(900, (JudulKolom.length * 60) + 280, PageOrientation.LANDSCAPE);
            report.setPageMargin(margin().setLeft(20).setRight(20).setBottom(20).setTop(20));
            report.pageFooter(cmp.text("Di Print Oleh " + GlobalVar.VarL.username + " Pada " + FDateF.datetostr(new Date(), "dd/MM/yyyy HH:mm")));
            report.ignorePagination();
            report.title(cmp.horizontalList().add(cmp.text(judul).setStyle(titleStyle)).newRow().add(cmp.filler().setFixedHeight(10)));
            report.setWhenNoDataType(WhenNoDataType.ALL_SECTIONS_NO_DETAIL);
            report.setDataSource(createDataSource(JudulKolom));
            report.show(false);
            //report.toPdf(new FileOutputStream("E:/report.pdf"));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private JRDataSource createDataSource(String[] JudulKolom) {
        DRDataSource dataSource = new DRDataSource(JudulKolom);
        for (int i = 0; i < jtableF1.getModel().getRowCount(); i++) {
            Object data[] = new Object[JudulKolom.length];
            for (int j = 0; j < JudulKolom.length; j++) {
                if (j == 0 || j == 1 || j == JudulKolom.length - 1) {
                    data[j] = jtableF1.getModel().getValueAt(i, j).toString();
                } else {
                    data[j] = new Integer(jtableF1.getModel().getValueAt(i, j).toString());
                }
            }
            dataSource.add(data);
        }
        return dataSource;
    }

}
