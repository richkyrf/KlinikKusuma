/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Laporan;

import File.SimpleReport;
import FunctionGUI.JOptionPaneF;
import java.util.Date;
import static GlobalVar.Var.*;
import KomponenGUI.FDateF;
import LSubProces.RunSelct;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.Calendar;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.sf.dynamicreports.jasper.builder.JasperReportBuilder;
import net.sf.dynamicreports.report.builder.DynamicReports;
import static net.sf.dynamicreports.report.builder.DynamicReports.cmp;
import static net.sf.dynamicreports.report.builder.DynamicReports.col;
import static net.sf.dynamicreports.report.builder.DynamicReports.margin;
import static net.sf.dynamicreports.report.builder.DynamicReports.stl;
import static net.sf.dynamicreports.report.builder.DynamicReports.type;
import net.sf.dynamicreports.report.builder.style.StyleBuilder;
import net.sf.dynamicreports.report.constant.HorizontalTextAlignment;
import net.sf.dynamicreports.report.constant.PageOrientation;
import net.sf.dynamicreports.report.constant.PageType;
import net.sf.dynamicreports.report.constant.VerticalTextAlignment;
import net.sf.dynamicreports.report.constant.WhenNoDataType;
import net.sf.dynamicreports.report.datasource.DRDataSource;
import net.sf.jasperreports.engine.JRDataSource;

/**
 *
 * @author richk
 */
public class Laporan extends javax.swing.JFrame {

    String[] Judul;

    /**
     * Creates new form LaporanLab
     */
    public Laporan(String type) {
        setTitle(type);
        initComponents();
        setVisible(true);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setResizable(false);
        tampilkan();
        jtableF1.requestFocus();
    }

    void setTunai() {
        int tunai = 0;
        for (int i = 0; i < jtableF1.getRowCount() - 1; i++) {
            if (jtableF1.getValueAt(i, jtableF1.getColumnCount() - 1).equals("Tunai")) {
                tunai += Integer.valueOf(jtableF1.getValueAt(i, jtableF1.getColumnCount() - 2).toString());
            }
        }
        JTTunai.setText(String.valueOf(tunai));
    }

    void setDebit() {
        int debit = 0;
        for (int i = 0; i < jtableF1.getRowCount() - 1; i++) {
            if (jtableF1.getValueAt(i, jtableF1.getColumnCount() - 1).equals("Debit")) {
                debit += Integer.valueOf(jtableF1.getValueAt(i, jtableF1.getColumnCount() - 2).toString());
            }
        }
        JTDebit.setText(String.valueOf(debit));
    }

    void setBayar() {
        int bayar = 0;
        int total = 0;
        for (int i = 0; i < jtableF1.getRowCount() - 1; i++) {
            bayar += Integer.valueOf(jtableF1.getValueAt(i, jtableF1.getColumnCount() - 2).toString());
            total += Integer.valueOf(jtableF1.getValueAt(i, jtableF1.getColumnCount() - 5).toString());
        }
        jtableF1.setValueAt(bayar, jtableF1.getRowCount() - 1, jtableF1.getColumnCount() - 2);
        jtableF1.setValueAt(total, jtableF1.getRowCount() - 1, jtableF1.getColumnCount() - 5);
    }

    void setDiskon() {
        int diskon = 0;
        for (int i = 0; i < jtableF1.getRowCount() - 1; i++) {
            diskon += Integer.valueOf(jtableF1.getValueAt(i, jtableF1.getColumnCount() - 4).toString());
        }
        jtableF1.setValueAt(diskon, jtableF1.getRowCount() - 1, jtableF1.getColumnCount() - 4);
        JTDiskon.setText(String.valueOf(diskon));
    }

    void setPoin() {
        int poin = 0;
        for (int i = 0; i < jtableF1.getRowCount() - 1; i++) {
            poin += Integer.valueOf(jtableF1.getValueAt(i, jtableF1.getColumnCount() - 3).toString());
        }
        jtableF1.setValueAt(poin, jtableF1.getRowCount() - 1, jtableF1.getColumnCount() - 3);
        JTPoin.setText(String.valueOf(poin));
    }

    void setTotal() {
        JTTotal.setInt(Integer.valueOf(jtableF1.getValueAt(jtableF1.getRowCount() - 1, jtableF1.getColumnCount() - 5).toString()));
    }

    void setSummary() {
        setTunai();
        setDebit();
        setBayar();
        setDiskon();
        setPoin();
        setTotal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlableF1 = new KomponenGUI.JlableF();
        JDTanggal = new KomponenGUI.JdateCF();
        jlableF2 = new KomponenGUI.JlableF();
        JDTanggal1 = new KomponenGUI.JdateCF();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtableF1 = new KomponenGUI.JtableF();
        jbuttonF1 = new KomponenGUI.JbuttonF();
        jbuttonF2 = new KomponenGUI.JbuttonF();
        jlableF3 = new KomponenGUI.JlableF();
        jlableF4 = new KomponenGUI.JlableF();
        jlableF5 = new KomponenGUI.JlableF();
        jlableF6 = new KomponenGUI.JlableF();
        jlableF7 = new KomponenGUI.JlableF();
        jlableF8 = new KomponenGUI.JlableF();
        jlableF9 = new KomponenGUI.JlableF();
        jlableF10 = new KomponenGUI.JlableF();
        jlableF11 = new KomponenGUI.JlableF();
        jlableF12 = new KomponenGUI.JlableF();
        jSeparator1 = new javax.swing.JSeparator();
        JTTunai = new KomponenGUI.JRibuanTextField();
        JTDebit = new KomponenGUI.JRibuanTextField();
        JTDiskon = new KomponenGUI.JRibuanTextField();
        JTPoin = new KomponenGUI.JRibuanTextField();
        JTTotal = new KomponenGUI.JRibuanTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jlableF1.setText("Periode :");

        JDTanggal.setDateFormatString("dd-MM-yyyy");
        Calendar c = Calendar.getInstance();
        c.set(Calendar.DAY_OF_MONTH, c.getActualMinimum(Calendar.DAY_OF_MONTH));
        Date now = c.getTime();
        JDTanggal.setDate(now);
        JDTanggal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                JDTanggalPropertyChange(evt);
            }
        });

        jlableF2.setText("s/d");

        JDTanggal1.setDateFormatString("dd-MM-yyyy");
        c.set(Calendar.DAY_OF_MONTH, c.getActualMaximum(Calendar.DAY_OF_MONTH));
        now = c.getTime();
        JDTanggal1.setDate(now);
        JDTanggal1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                JDTanggal1PropertyChange(evt);
            }
        });

        new JScrollPane(jtableF1, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        jtableF1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jtableF1.setAutoCreateRowSorter(true);
        jtableF1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtableF1);

        jbuttonF1.setText("Print");
        jbuttonF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttonF1ActionPerformed(evt);
            }
        });

        jbuttonF2.setText("Kembali");
        jbuttonF2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttonF2ActionPerformed(evt);
            }
        });

        jlableF3.setText(":");

        jlableF4.setText("Tunai");

        jlableF5.setText(":");

        jlableF6.setText("Debit");

        jlableF7.setText(":");

        jlableF8.setText("Diskon");

        jlableF9.setText(":");

        jlableF10.setText("Poin");

        jlableF11.setText(":");

        jlableF12.setText("Total");

        JTTunai.setEnabled(false);

        JTDebit.setEnabled(false);

        JTDiskon.setEnabled(false);

        JTPoin.setEnabled(false);

        JTTotal.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlableF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JDTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlableF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JDTanggal1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jbuttonF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jlableF4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jlableF3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(JTTunai, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jlableF6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jlableF5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(JTDebit, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jlableF8, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jlableF7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(JTDiskon, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jlableF10, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jlableF9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(JTPoin, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jlableF12, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jlableF11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(JTTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(90, 90, 90)
                        .addComponent(jbuttonF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(414, 414, 414)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlableF3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlableF4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JTTunai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlableF5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlableF6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JTDebit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlableF7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlableF8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JTDiskon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlableF9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlableF10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JTPoin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JDTanggal1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlableF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JDTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlableF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlableF11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlableF12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbuttonF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(JTTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbuttonF2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if (getTitle().equals("Laporan Tindakan")) {
            laporanTindakan = null;
        } else if (getTitle().equals("Laporan Facial")) {
            laporanFacial = null;
        } else if (getTitle().equals("Laporan Cream")) {
            laporanCream = null;
        } else {
            JOptionPaneF.showMessageDialog(this, "Parameter Salah.");
        }
    }//GEN-LAST:event_formWindowClosed

    private void jbuttonF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttonF1ActionPerformed
        if (getTitle().equals("Laporan Tindakan")) {
            build(jtableF1.getModel(), "Laporan Tindakan", Judul);
        } else if (getTitle().equals("Laporan Facial")) {
            build(jtableF1.getModel(), "Laporan Facial", Judul);
        } else if (getTitle().equals("Laporan Cream")) {
            build(jtableF1.getModel(), "Laporan Cream", Judul);
        } else {
            JOptionPaneF.showMessageDialog(this, "Parameter Salah.");
        }
    }//GEN-LAST:event_jbuttonF1ActionPerformed

    private void JDTanggalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_JDTanggalPropertyChange
        tampilkan();
    }//GEN-LAST:event_JDTanggalPropertyChange

    private void JDTanggal1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_JDTanggal1PropertyChange
        tampilkan();
    }//GEN-LAST:event_JDTanggal1PropertyChange

    private void jbuttonF2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttonF2ActionPerformed
        dispose();
//        String query = "";
//        for (int i = 1; i <= 31; i++) {
//            query += ", SUM(IF(a.`Tanggal` = '" + i + "', `Jumlah`, 0)) as '" + i + "'";
//        }
//        System.out.println(query);
//        System.out.println(jtableF1.getValueAt(0, jtableF1.getColumnCount() - 5));
//        System.out.println(jtableF1.getValueAt(0, jtableF1.getColumnCount() - 2));
    }//GEN-LAST:event_jbuttonF2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Laporan("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static KomponenGUI.JdateCF JDTanggal;
    private static KomponenGUI.JdateCF JDTanggal1;
    private KomponenGUI.JRibuanTextField JTDebit;
    private KomponenGUI.JRibuanTextField JTDiskon;
    private KomponenGUI.JRibuanTextField JTPoin;
    private KomponenGUI.JRibuanTextField JTTotal;
    private KomponenGUI.JRibuanTextField JTTunai;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private KomponenGUI.JbuttonF jbuttonF1;
    private KomponenGUI.JbuttonF jbuttonF2;
    private KomponenGUI.JlableF jlableF1;
    private KomponenGUI.JlableF jlableF10;
    private KomponenGUI.JlableF jlableF11;
    private KomponenGUI.JlableF jlableF12;
    private KomponenGUI.JlableF jlableF2;
    private KomponenGUI.JlableF jlableF3;
    private KomponenGUI.JlableF jlableF4;
    private KomponenGUI.JlableF jlableF5;
    private KomponenGUI.JlableF jlableF6;
    private KomponenGUI.JlableF jlableF7;
    private KomponenGUI.JlableF jlableF8;
    private KomponenGUI.JlableF jlableF9;
    public KomponenGUI.JtableF jtableF1;
    // End of variables declaration//GEN-END:variables

    void tampilkan() {
        RunSelct runSelct = new RunSelct();
        if (getTitle().equals("Laporan Tindakan")) {
            runSelct.setQuery("SELECT `IdTindakan`, `NamaTindakan` FROM `tbmtindakan` WHERE `IdTipeTindakan` = 2 ");
        } else if (getTitle().equals("Laporan Facial")) {
            runSelct.setQuery("SELECT `IdTindakan`, `NamaTindakan` FROM `tbmtindakan` WHERE `IdTipeTindakan` = 1 ");
        } else if (getTitle().equals("Laporan Cream")) {
            runSelct.setQuery("SELECT `IdBarang`, `NamaBarang` FROM `tbmbarang` WHERE `IdJenisBarang` = 1 ");
        }
        String sql;
        String dynamic = "";
        try {
            ResultSet rs = runSelct.excute();
            rs.last();
            if (getTitle().equals("Laporan Cream")) {
                Judul = new String[rs.getRow() + 8];
            } else {
                Judul = new String[rs.getRow() + 9];
            }
            rs.beforeFirst();
            int row = 3;
            Judul[0] = "Tanggal";
            Judul[1] = "No. Nota";
            Judul[2] = "Pasien";
            while (rs.next()) {
                Judul[row] = rs.getString(2);
                if (getTitle().equals("Laporan Cream")) {
                    dynamic += ", SUM(IF(a.`IdObat` = '" + rs.getString(1) + "', `Jumlah`, 0)) as '" + rs.getString(2) + "'";
                } else {
                    dynamic += ", SUM(IF(a.`IdTindakan` = '" + rs.getString(1) + "', `Jumlah`, 0)) as '" + rs.getString(2) + "'";
                }
                row++;
            }
            if (getTitle().equals("Laporan Cream")) {
                Judul[row] = "Total";
                Judul[row + 1] = "Diskon";
                Judul[row + 2] = "Poin";
                Judul[row + 3] = "Bayar";
                Judul[row + 4] = "Metode";
            } else {
                if (getTitle().equals("Laporan Tindakan")) {
                    Judul[row] = "Dokter";
                } else if (getTitle().equals("Laporan Facial")) {
                    Judul[row] = "Beautician";
                }
                Judul[row + 1] = "Total";
                Judul[row + 2] = "Diskon";
                Judul[row + 3] = "Poin";
                Judul[row + 4] = "Bayar";
                Judul[row + 5] = "Metode";
            }
        } catch (SQLException e) {
            System.out.println("E6" + e);
            JOptionPaneF.showMessageDialog(null, "Gagal Panggil Tampilkan Data");
        } finally {
//            runSelct.closecon();
        }
        sql = null;
        if (getTitle().equals("Laporan Tindakan")) {
            jtableF1.setQuery("SELECT DATE_FORMAT(b.`Tanggal`,'%d-%m-%Y') as 'Tanggal', a.`NoBilling` as 'No. Nota', `NamaPasien` as 'Pasien' " + dynamic + ", IFNULL(`NamaDokter`,'-') as 'Dokter', SUM(a.`Jumlah`*a.`Harga`) as 'Total', ROUND(SUM(IF(`DiskonTindakan`>100,`DiskonTindakan`,a.`Jumlah`*a.`Harga`*`DiskonTindakan`/100)),0) as 'Diskon', SUM(`PoinTindakan`*1000) as 'Poin', ROUND(SUM(a.`Jumlah`*a.`Harga`) - SUM(IF(`DiskonTindakan`>100,`DiskonTindakan`,a.`Jumlah`*a.`Harga`*`DiskonTindakan`/100)) - SUM(`PoinTindakan`*1000),0) as 'Bayar', `MetodePembayaran` as 'Metode' FROM `tbbillingtindakan`a JOIN `tbbilling`b ON a.`NoBilling`=b.`NoBilling` JOIN `tbantrian`c ON b.`IdAntrian`=c.`IdAntrian` JOIN `tbmpasien`d ON c.`IdPasien`=d.`IdPasien` LEFT JOIN `tbmdokter`e ON b.`IdDokter`=e.`IdDokter` JOIN `tbmtindakan`f ON a.`IdTindakan`=f.`IdTindakan` WHERE 1 AND `IdTipeTindakan` = 2 AND b.`Tanggal` BETWEEN '" + FDateF.datetostr(JDTanggal.getDate(), "yyyy-MM-dd") + "' AND '" + FDateF.datetostr(JDTanggal1.getDate(), "yyyy-MM-dd") + "' GROUP BY a.`NoBilling` ASC WITH ROLLUP");
            jtableF1.tampilkan();
            jtableF1.setValueAt("", jtableF1.getRowCount() - 1, 0);
            jtableF1.setValueAt("", jtableF1.getRowCount() - 1, 1);
            jtableF1.setValueAt("", jtableF1.getRowCount() - 1, 2);
            jtableF1.setValueAt("", jtableF1.getRowCount() - 1, jtableF1.getColumnCount() - 1);
            jtableF1.setValueAt("", jtableF1.getRowCount() - 1, jtableF1.getColumnCount() - 6);
        } else if (getTitle().equals("Laporan Facial")) {
            jtableF1.setQuery("SELECT DATE_FORMAT(b.`Tanggal`,'%d-%m-%Y') as 'Tanggal', a.`NoBilling` as 'No. Nota', `NamaPasien` as 'Pasien' " + dynamic + ", IFNULL(`NamaBeautician`,'-') as 'Beautician', SUM(a.`Jumlah`*a.`Harga`) as 'Total', ROUND(SUM(IF(`DiskonTindakan`>100,`DiskonTindakan`,a.`Jumlah`*a.`Harga`*`DiskonTindakan`/100)),0) as 'Diskon', SUM(`PoinTindakan`*1000) as 'Poin', ROUND(SUM(a.`Jumlah`*a.`Harga`) - SUM(IF(`DiskonTindakan`>100,`DiskonTindakan`,a.`Jumlah`*a.`Harga`*`DiskonTindakan`/100)) - SUM(`PoinTindakan`*1000),0) as 'Bayar', `MetodePembayaran` as 'Metode' FROM `tbbillingtindakan`a JOIN `tbbilling`b ON a.`NoBilling`=b.`NoBilling` JOIN `tbantrian`c ON b.`IdAntrian`=c.`IdAntrian` JOIN `tbmpasien`d ON c.`IdPasien`=d.`IdPasien` LEFT JOIN `tbmbeautician`e ON b.`IdBeautician`=e.`IdBeautician` JOIN `tbmtindakan`f ON a.`IdTindakan`=f.`IdTindakan` WHERE 1 AND `IdTipeTindakan` = 1 AND b.`Tanggal` BETWEEN '" + FDateF.datetostr(JDTanggal.getDate(), "yyyy-MM-dd") + "' AND '" + FDateF.datetostr(JDTanggal1.getDate(), "yyyy-MM-dd") + "' GROUP BY a.`NoBilling` ASC WITH ROLLUP");
            jtableF1.tampilkan();
            jtableF1.setValueAt("", jtableF1.getRowCount() - 1, 0);
            jtableF1.setValueAt("", jtableF1.getRowCount() - 1, 1);
            jtableF1.setValueAt("", jtableF1.getRowCount() - 1, 2);
            jtableF1.setValueAt("", jtableF1.getRowCount() - 1, jtableF1.getColumnCount() - 1);
            jtableF1.setValueAt("", jtableF1.getRowCount() - 1, jtableF1.getColumnCount() - 6);
        } else if (getTitle().equals("Laporan Cream")) {
            jtableF1.setQuery("SELECT DATE_FORMAT(b.`Tanggal`,'%d-%m-%Y') as 'Tanggal', b.`NoBilling` as 'No. Nota', `NamaPasien` as 'Pasien' " + dynamic + ", (`Jumlah`*a.`Harga`) as 'Total', ROUND(IF(`DiskonObat`>100,`DiskonObat`,a.`Jumlah`*a.`Harga`*`DiskonObat`/100),0) as 'Diskon', `PoinObat`*1000 as 'Poin', ROUND((`Jumlah`*a.`Harga`) - IF(`DiskonObat`>100,`DiskonObat`,a.`Jumlah`*a.`Harga`*`DiskonObat`/100) - (`PoinObat`*1000),0) as 'Bayar', `MetodePembayaran` as 'Metode' FROM `tbbillingobat`a JOIN `tbbilling`b ON a.`NoBilling`=b.`NoBilling` LEFT JOIN `tbantrian`c ON b.`IdAntrian`=c.`IdAntrian` LEFT JOIN `tbmpasien`d ON c.`IdPasien`=d.`IdPasien` JOIN `tbmbarang`e ON a.`IdObat`=e.`IdBarang` WHERE 1 AND `IdJenisBarang` = 1 AND b.`Tanggal` BETWEEN '" + FDateF.datetostr(JDTanggal.getDate(), "yyyy-MM-dd") + "' AND '" + FDateF.datetostr(JDTanggal1.getDate(), "yyyy-MM-dd") + "' GROUP BY b.`NoBilling` ASC WITH ROLLUP");
            jtableF1.tampilkan();
            jtableF1.setValueAt("", jtableF1.getRowCount() - 1, 0);
            jtableF1.setValueAt("", jtableF1.getRowCount() - 1, 1);
            jtableF1.setValueAt("", jtableF1.getRowCount() - 1, 2);
            jtableF1.setValueAt("", jtableF1.getRowCount() - 1, jtableF1.getColumnCount() - 1);
        }
        for (int i = 0; i < jtableF1.getColumnCount(); i++) {
            if (i == 0) {
                jtableF1.setrender(new int[]{i}, new String[]{"Date"});
            } else if (i == 1) {
                jtableF1.setrender(new int[]{i}, new String[]{"Center"});
            } else if (i == jtableF1.getColumnCount() - 5 || i == jtableF1.getColumnCount() - 4 || i == jtableF1.getColumnCount() - 3 || i == jtableF1.getColumnCount() - 2) {
                jtableF1.setrender(new int[]{i}, new String[]{"Number"});
            } else if (i != jtableF1.getColumnCount() - 1 && i > 2 && (i != jtableF1.getColumnCount() - 6 || getTitle().equals("Laporan Cream"))) {
                jtableF1.setrender(new int[]{i}, new String[]{"CenteredNumber"});
            }
        }
        setSummary();
    }

    void build(TableModel model, String judul, String[] JudulKolom) {
        StyleBuilder titleStyle = stl.style().bold().setHorizontalTextAlignment(HorizontalTextAlignment.CENTER).setFontSize(14).setFontName("Verdana").setPadding(5).setBorder(stl.pen1Point().setLineWidth(1f));
        StyleBuilder columnTitleStyle = stl.style().bold().setTextAlignment(HorizontalTextAlignment.CENTER, VerticalTextAlignment.MIDDLE).setPadding(2).setBorder(stl.pen1Point().setLineWidth(0.5f));
        StyleBuilder colStyle = stl.style().setPadding(2).setBorder(stl.pen1Point().setLineWidth(0.5f));
        try {
            JasperReportBuilder report = DynamicReports.report();
            report.setColumnTitleStyle(columnTitleStyle);
            for (int i = 0; i < JudulKolom.length; i++) {
                if (i == 0) {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.stringType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.CENTER).setWidth(120));
                } else if (i == 1) {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.stringType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.CENTER).setWidth(100));
                } else if (i == 2) {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.stringType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.LEFT).setWidth(200));
                } else if (i == JudulKolom.length - 6 && !getTitle().equals("Laporan Cream")) {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.stringType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.LEFT).setWidth(200));
                } else if (i == JudulKolom.length - 5) {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.integerType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.RIGHT).setWidth(100));
                } else if (i == JudulKolom.length - 4) {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.integerType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.RIGHT).setWidth(100));
                } else if (i == JudulKolom.length - 3) {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.integerType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.RIGHT).setWidth(100));
                } else if (i == JudulKolom.length - 2) {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.integerType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.RIGHT).setWidth(100));
                } else if (i == JudulKolom.length - 1) {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.stringType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.CENTER).setWidth(100));
                } else {
                    report.columns(col.column(JudulKolom[i], JudulKolom[i], type.integerType()).setStyle(colStyle).setHorizontalTextAlignment(HorizontalTextAlignment.CENTER).setWidth(60));
                }
            }
            report.setPageFormat(900, (JudulKolom.length * 60) + 280, PageOrientation.LANDSCAPE);
            report.setPageMargin(margin().setLeft(20).setRight(20).setBottom(20).setTop(20));
            report.pageFooter(cmp.text("Di Print Oleh " + GlobalVar.VarL.username + " Pada " + FDateF.datetostr(new Date(), "dd/MM/yyyy HH:mm")));
            report.ignorePagination();
            report.title(cmp.horizontalList().add(cmp.text(judul).setStyle(titleStyle)).newRow().add(cmp.filler().setFixedHeight(10)));
            report.addProperty("net.sf.jasperreports.export.csv.field.delimiter", ";");
            report.setWhenNoDataType(WhenNoDataType.ALL_SECTIONS_NO_DETAIL);
            report.setDataSource(createDataSource(JudulKolom));
            report.show(false);
            //report.toPdf(new FileOutputStream("E:/report.pdf"));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private JRDataSource createDataSource(String[] JudulKolom) {
        DRDataSource dataSource = new DRDataSource(JudulKolom);
        for (int i = 0; i < jtableF1.getModel().getRowCount(); i++) {
            Object data[] = new Object[JudulKolom.length];
            for (int j = 0; j < JudulKolom.length; j++) {
                if (j == 0 || j == 1 || j == 2 || j == JudulKolom.length - 1) {
                    data[j] = jtableF1.getModel().getValueAt(i, j).toString();
                } else if (j == JudulKolom.length - 6 && !getTitle().equals("Laporan Cream")) {
                    data[j] = jtableF1.getModel().getValueAt(i, j).toString();
                } else {
                    data[j] = new Integer(jtableF1.getModel().getValueAt(i, j).toString().replace(".", ""));
                }
            }
            dataSource.add(data);
        }
        return dataSource;
    }

}
